/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.product;

import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.enterprise.Enterprise;
import model.product.Gold;
import model.product.Product.ProductType;
import model.userAccount.UserAccount;
import ui.admin.AdminEnterpriseJPanel;

/**
 *
 * @author YASH
 */
public class CreateNewProductJPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    UserAccount account;
    Enterprise enterprise;
    
    public CreateNewProductJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.enterprise = enterprise;
        populateCombo();
        showRequiredFieldsOnly();
    }
    
    private void populateCombo() {
        cmbBoxType.removeAllItems();
        ArrayList<ProductType> productType = new ArrayList<>();
        productType.add(ProductType.Gold);
        productType.add(ProductType.Silver);
        for (ProductType type: productType){
            cmbBoxType.addItem(type.toString());
        }
    }
    
    private void showRequiredFieldsOnly() {
        String selectedTypeString = (String) cmbBoxType.getSelectedItem();
        if (selectedTypeString.equals("Gold")) {
            txtTotalPrice.setEnabled(false);
            txtGoldWeight.setEnabled(true);
            txtOtherWeight.setEnabled(true);
            txtKarat.setEnabled(true);
            txtLaborCharge.setEnabled(true);
            txtExternalCharge.setEnabled(true);
        } else {
            txtTotalPrice.setEnabled(true);
            txtGoldWeight.setEnabled(false);
            txtOtherWeight.setEnabled(false);
            txtKarat.setEnabled(false);
            txtLaborCharge.setEnabled(false);
            txtExternalCharge.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAdd = new javax.swing.JButton();
        lblRepairGold = new javax.swing.JLabel();
        cmbBoxType = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        lblProductName = new javax.swing.JLabel();
        txtTotalWeight = new javax.swing.JTextField();
        lblTotalWeight = new javax.swing.JLabel();
        txtTotalPrice = new javax.swing.JTextField();
        lblTotalPrice = new javax.swing.JLabel();
        txtGoldWeight = new javax.swing.JTextField();
        lblGoldWeight = new javax.swing.JLabel();
        txtOtherWeight = new javax.swing.JTextField();
        lblOtherWeight = new javax.swing.JLabel();
        txtKarat = new javax.swing.JTextField();
        lblKarat = new javax.swing.JLabel();
        txtLaborCharge = new javax.swing.JTextField();
        lblLaborCharge = new javax.swing.JLabel();
        txtExternalCharge = new javax.swing.JTextField();
        lblExternalCharge = new javax.swing.JLabel();
        btnBack1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(222, 181, 126));

        btnAdd.setBackground(new java.awt.Color(64, 52, 36));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lblRepairGold.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lblRepairGold.setForeground(new java.awt.Color(64, 52, 36));
        lblRepairGold.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRepairGold.setText("Add Product");

        cmbBoxType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBoxTypeActionPerformed(evt);
            }
        });

        jLabel1.setText("Product Type");

        lblProductName.setText("Name");

        lblTotalWeight.setText("Total Weight");

        lblTotalPrice.setText("Price");

        lblGoldWeight.setText("Gold Weight");

        lblOtherWeight.setText("Other Weight");

        lblKarat.setText("Karat");

        txtLaborCharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLaborChargeActionPerformed(evt);
            }
        });

        lblLaborCharge.setText("Labor Charge");

        txtExternalCharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExternalChargeActionPerformed(evt);
            }
        });

        lblExternalCharge.setText("External Charge");

        btnBack1.setBackground(new java.awt.Color(64, 52, 36));
        btnBack1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack1.setForeground(new java.awt.Color(255, 255, 255));
        btnBack1.setText("Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 284, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblLaborCharge)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtLaborCharge, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblKarat)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtKarat, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblTotalWeight)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtTotalWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblProductName)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cmbBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblGoldWeight)
                                        .addComponent(lblTotalPrice)
                                        .addComponent(lblOtherWeight))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtOtherWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtGoldWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblExternalCharge)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtExternalCharge, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(231, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblRepairGold, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmbBoxType, txtExternalCharge, txtGoldWeight, txtKarat, txtLaborCharge, txtOtherWeight, txtProductName, txtTotalPrice, txtTotalWeight});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblRepairGold)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProductName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTotalWeight))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTotalPrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGoldWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGoldWeight))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOtherWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOtherWeight))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKarat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblKarat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLaborCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLaborCharge))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtExternalCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblExternalCharge))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAdd)
                .addContainerGap(122, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String name = txtProductName.getText();
        double weight;
        double price;
        try {
            weight = Double.parseDouble(txtTotalWeight.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Weight should be a number.");
            return;
        }
        if (weight <= 0) {
                JOptionPane.showMessageDialog(this, "Weight should be grater than zero.");
                return;
            }
        String selectedTypeString = (String) cmbBoxType.getSelectedItem();
        if (selectedTypeString.equals("Gold")) {
            double goldWeight;
            double otherWeight;
            int karat;
            double laborCharges;
            double externalCharges;
            try {
                goldWeight = Double.parseDouble(txtGoldWeight.getText());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Gold weight should be a number.");
                return;
            }
            try {
                otherWeight = Double.parseDouble(txtOtherWeight.getText());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Other weight should be a number.");
                return;
            }
            try {
                karat = Integer.parseInt(txtKarat.getText());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Karat should be a number.");
                return;
            }
            try {
                laborCharges = Double.parseDouble(txtLaborCharge.getText());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Labor charges should be a number.");
                return;
            }
            try {
                externalCharges = Double.parseDouble(txtExternalCharge.getText());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "External charges should be a number.");
                return;
            }
            if (goldWeight <= 0) {
                JOptionPane.showMessageDialog(this, "Gold Weight should be grater than zero.");
                return;
            }
            if (otherWeight <= 0) {
                JOptionPane.showMessageDialog(this, "Other Weight should be grater than zero.");
                return;
            }
            if (karat <= 0) {
                JOptionPane.showMessageDialog(this, "Karat should be grater than zero.");
                return;
            }
            if (karat > 24) {
                JOptionPane.showMessageDialog(this, "Karat should be less than or equal to 24.");
                return;
            }
            if (laborCharges <= 0) {
                JOptionPane.showMessageDialog(this, "Labor Charges should be grater than zero.");
                return;
            }
            if (externalCharges <= 0) {
                JOptionPane.showMessageDialog(this, "External Charges should be grater than zero.");
                return;
            }
            if (weight != goldWeight + otherWeight) {
                JOptionPane.showMessageDialog(this, "Total weight should be equal to individual weights.");
                return;
            }

            price = (goldWeight * Gold.getGoldPrice() *(karat/24)) + weight * laborCharges + externalCharges;
            
            enterprise.getProducts().CreateNewProduct(ProductType.Gold, name, weight, goldWeight, otherWeight, karat, laborCharges, externalCharges);
        } else {
            try {
                price = Double.parseDouble(txtTotalPrice.getText());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "price should be a number.");
                return;
            }
            if (price <= 0) {
                JOptionPane.showMessageDialog(this, "Price should be grater than zero.");
                return;
            }
            enterprise.getProducts().CreateNewProduct(ProductType.Silver, name, weight, price);
        }
        JOptionPane.showMessageDialog(this, "Product Added successfully.");
        // Clearing Fields
        txtProductName.setText("");
        txtTotalWeight.setText("");
        txtTotalPrice.setText("");
        txtGoldWeight.setText("");
        txtOtherWeight.setText("");
        txtKarat.setText("");
        txtLaborCharge.setText("");
        txtExternalCharge.setText("");
    }//GEN-LAST:event_btnAddActionPerformed

    private void cmbBoxTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBoxTypeActionPerformed
        // TODO add your handling code here:
        showRequiredFieldsOnly();
    }//GEN-LAST:event_cmbBoxTypeActionPerformed

    private void txtLaborChargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLaborChargeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLaborChargeActionPerformed

    private void txtExternalChargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtExternalChargeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtExternalChargeActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        userProcessContainer.remove(this);
        Component [] componentArray = userProcessContainer.getComponents();
        Component c = componentArray[componentArray.length-1];
        AdminEnterpriseJPanel aejp = (AdminEnterpriseJPanel) c;
        aejp.populateProductTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBack1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack1;
    private javax.swing.JComboBox<String> cmbBoxType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblExternalCharge;
    private javax.swing.JLabel lblGoldWeight;
    private javax.swing.JLabel lblKarat;
    private javax.swing.JLabel lblLaborCharge;
    private javax.swing.JLabel lblOtherWeight;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblRepairGold;
    private javax.swing.JLabel lblTotalPrice;
    private javax.swing.JLabel lblTotalWeight;
    private javax.swing.JTextField txtExternalCharge;
    private javax.swing.JTextField txtGoldWeight;
    private javax.swing.JTextField txtKarat;
    private javax.swing.JTextField txtLaborCharge;
    private javax.swing.JTextField txtOtherWeight;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtTotalPrice;
    private javax.swing.JTextField txtTotalWeight;
    // End of variables declaration//GEN-END:variables
}
