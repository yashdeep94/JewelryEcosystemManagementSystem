/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.jewelleryEnterprise.gold;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.EcoSystem;
import model.customer.CustomerProfile;
import model.enterprise.Enterprise;
import model.order.Order;
import model.organization.Organization;
import model.organization.TestingOrganization;
import model.product.Product;
import model.userAccount.UserAccount;
import model.workQueue.WorkRequest;

/**
 *
 * @author lenovo
 */
public class BuyGoldDashboardJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BuyGoldDashboardJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    Organization organization;
    Enterprise enterprise;
    EcoSystem system;
    private Order order;
    
    public BuyGoldDashboardJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.system = system;
        populateTable();
    }
    
    private void populateTable(){
        DefaultTableModel model = (DefaultTableModel) tblCustomer.getModel();
        model.setRowCount(0);
        for (CustomerProfile customer : enterprise.getCustomerDirectory().getCustomers()) {
            Object row[] = new Object[4];
            row[0] = customer;
            row[1] = customer.getPerson().getPhoneNumber();
            row[2] = customer.getPerson().getEmailId();
            row[3] = customer.getPerson().getHomeAddress().getCity();      
            model.addRow(row);  
        }
    }
    
    private void populateTable(String keyword) {
        DefaultTableModel model = (DefaultTableModel) tblCustomer.getModel();
        model.setRowCount(0);
        for (CustomerProfile customer : enterprise.getCustomerDirectory().getCustomers()) {
            if (customer.getPerson().getFirstName().contains(keyword) ||
                customer.getPerson().getMiddleName().contains(keyword) ||
                customer.getPerson().getLastName().contains(keyword)) {
                Object row[] = new Object[4];
                row[0] = customer;
                row[1] = customer.getPerson().getPhoneNumber();
                row[2] = customer.getPerson().getEmailId();
                row[3] = customer.getPerson().getHomeAddress().getCity();      
                model.addRow(row); 
            } 
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSearchCustomer = new javax.swing.JButton();
        txtSearchCustomer = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        lblRepairGold = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomer = new javax.swing.JTable();
        txtProductWeightGold = new javax.swing.JTextField();
        lblEstimatedTime = new javax.swing.JLabel();
        txtProductWeightOther = new javax.swing.JTextField();
        lblAppxGold = new javax.swing.JLabel();
        btnSendToTesting = new javax.swing.JButton();
        lblProductName = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();

        setBackground(new java.awt.Color(222, 181, 126));

        btnSearchCustomer.setBackground(new java.awt.Color(64, 52, 36));
        btnSearchCustomer.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSearchCustomer.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchCustomer.setText("Search");
        btnSearchCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCustomerActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(64, 52, 36));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblRepairGold.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblRepairGold.setForeground(new java.awt.Color(64, 52, 36));
        lblRepairGold.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRepairGold.setText("Buy Gold");

        tblCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Customer Name", "Phone Number", "Email ", "Address"
            }
        ));
        jScrollPane1.setViewportView(tblCustomer);

        lblEstimatedTime.setText("Product Weight(Gold)");

        txtProductWeightOther.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductWeightOtherActionPerformed(evt);
            }
        });

        lblAppxGold.setText("Product Weight (Other)");

        btnSendToTesting.setBackground(new java.awt.Color(64, 52, 36));
        btnSendToTesting.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSendToTesting.setForeground(new java.awt.Color(255, 255, 255));
        btnSendToTesting.setText("Send To Testing");
        btnSendToTesting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendToTestingActionPerformed(evt);
            }
        });

        lblProductName.setText("Product Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 480, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtSearchCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnSearchCustomer))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblProductName)
                                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtProductWeightGold, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEstimatedTime))
                                .addGap(53, 53, 53)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtProductWeightOther, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAppxGold))))
                        .addContainerGap(496, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRepairGold, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSendToTesting))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtProductWeightGold, txtProductWeightOther});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblRepairGold)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchCustomer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblEstimatedTime)
                                    .addComponent(lblAppxGold))
                                .addGap(28, 28, 28))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtProductWeightOther, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtProductWeightGold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblProductName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnSendToTesting)
                .addContainerGap(188, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtProductWeightOtherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductWeightOtherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductWeightOtherActionPerformed

    private void btnSendToTestingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendToTestingActionPerformed
        int selectedRow = tblCustomer.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select customer first.");
            return;
        }
        CustomerProfile customer = (CustomerProfile) tblCustomer.getValueAt(selectedRow, 0);
        String name = txtProductName.getText();
        if (name.isBlank()) {
            JOptionPane.showMessageDialog(this, " Product name cannot be blank.");
            return;
        }
        double goldWeight;
        double otherWeight;
        try {
            otherWeight = Double.parseDouble(txtProductWeightOther.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Product weight (Other) should be a number.");
            return;
        }
        try {
            goldWeight = Double.parseDouble(txtProductWeightGold.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Product weight (Gold) should be a number.");
            return;
        }
        if (goldWeight <= 0) {
            JOptionPane.showMessageDialog(this, "Product weight (Gold) should be grater than zero.");
            return;
        }
        if (otherWeight <= 0) {
            JOptionPane.showMessageDialog(this, "Product weight (Other) should be grater than zero.");
            return;
        }
        double weight = goldWeight + otherWeight;
        // Creating repairing product and its associated order
        Product product = enterprise.getProducts().CreateNewProduct(Product.ProductType.Gold, name, weight, goldWeight, otherWeight);
        this.order = enterprise.getMasterOrderList().CreateNewOrder(customer);
        this.order.getProductList().add(product);
        String message = "";
        for (Product p: this.order.getProductList()) {
            message += p.getName()+" ";
            message += "Weight: "+ String.valueOf(p.getWeight())+ "\n";
        }
        message += "$" +String.valueOf(this.order.getId());
        WorkRequest request = new WorkRequest();
        request.setMessage(message);
        request.setSender(account);
        request.setStatus("Sent");
        Organization org = null;
        for (Enterprise e: system.getNetworkList().get(0).getEnterpriseDirectory().getEnterpriseList()) {
            for (Organization o : e.getOrganizationDirectory().getOrganizationList()){
                if (o instanceof TestingOrganization){
                    org = o;
                    break;
                }
            }
            if (org!=null){
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
        }
        JOptionPane.showMessageDialog(this, "Sent to testing");
        txtSearchCustomer.setText("");
        txtProductName.setText("");
        txtProductWeightOther.setText("");
        txtProductWeightGold.setText("");
        order = null;
        populateTable();
    }//GEN-LAST:event_btnSendToTestingActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCustomerActionPerformed
        // TODO add your handling code here:
        String keyword = txtSearchCustomer.getText();
        if (keyword.isBlank()) {
            JOptionPane.showMessageDialog(this, "Customer search field cannot be blank.");
            return;
        }
        populateTable(keyword);
    }//GEN-LAST:event_btnSearchCustomerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSearchCustomer;
    private javax.swing.JButton btnSendToTesting;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAppxGold;
    private javax.swing.JLabel lblEstimatedTime;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblRepairGold;
    private javax.swing.JTable tblCustomer;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtProductWeightGold;
    private javax.swing.JTextField txtProductWeightOther;
    private javax.swing.JTextField txtSearchCustomer;
    // End of variables declaration//GEN-END:variables
}
